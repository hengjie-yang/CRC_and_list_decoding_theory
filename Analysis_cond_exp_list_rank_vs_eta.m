% This script is to study the evolution of the normalized probability
% distributions with \eta, and see how the distribution gradually converges
% to the limit distribution for origin noise.
%
% The script requires the compressed table generated by
% "Compress_raw_data_into_list_rank_table"
%
% Written by Hengjie Yang (hengjie.yang@ucla.edu)   03/14/21
%

clear all;
clc;


set(0,'DefaultTextFontName','Times','DefaultTextFontSize',16,...
    'DefaultAxesFontName','Times','DefaultAxesFontSize',16,...
    'DefaultLineLineWidth',1,'DefaultLineMarkerSize',7.75);
set(groot, 'defaultAxesTickLabelInterpreter','latex'); 
set(groot, 'defaultLegendInterpreter','latex');


% Load dataset

path = './Simulation_results/';
fileName = '031421_113247_list_rank_table_cond_exp_list_rank_vs_eta_ZTCC_13_17_CRC_103_k_64';

load([path, fileName, '.mat'],'etas', 'DistTable');

Psi = size(DistTable{1}, 1) - 1;


% Compute the normalized list rank distributions excluding transmitted point given \eta
Distributions = cell(length(etas), 1);
Cond_exp_list_ranks = zeros(length(etas), 1);
Cond_UE_probs = zeros(length(etas), 1);
Lower_bounds = zeros(length(etas), 1);
Approximations = zeros(length(etas), 1);

Cond_exp_list_ranks_correct = zeros(length(etas), 1);
Cond_exp_list_ranks_UE = zeros(length(etas), 1);

for iter = 1:length(etas)
    dem = sum(DistTable{iter}(:, 3));
    if dem  == 0
        Distributions{iter} = Inf(Psi, 1); % distribution is undefined.
    else
        Distributions{iter} = DistTable{iter}(1:Psi, 3);
        Distributions{iter} = Distributions{iter}/dem;
    end
end


% Tilted_distributions = cell(length(etas), 1);
% for iter = 1:length(etas)
%     Tilted_distributions{iter} = zeros(Psi, 1);
%     num_UE = sum(DistTable{iter}(1:Psi, 3));
%     tot = sum(DistTable{iter}(1:Psi, 1));
%     prob_UE = num_UE / tot;
%     for s = 1:Psi
%         num = DistTable{iter}(s, 1)/tot - (1/s)*DistTable{iter}(s, 2)/tot;
%         Tilted_distributions{iter}(s) = num/prob_UE;
%     end
% end


list_ranks = 1:Psi;
convergent_val = 60.7;

for iter = 1:length(etas)
    tot = sum(DistTable{iter}(1:Psi, 1));
    num_UE = sum(DistTable{iter}(1:Psi, 3));
    overall_distribution = DistTable{iter}(1:Psi, 1);
    overall_distribution = overall_distribution/tot;
    overall_distribution = overall_distribution';
    Cond_exp_list_ranks(iter) = sum(list_ranks.*overall_distribution);
    Cond_UE_probs(iter) = num_UE / tot;
    
    temp = sum(list_ranks.*Distributions{iter}');
    Lower_bounds(iter) = 1 - Cond_UE_probs(iter)+Cond_UE_probs(iter)*temp;
    Approximations(iter) = 1 - Cond_UE_probs(iter)+Cond_UE_probs(iter)*convergent_val;
end


figure;
semilogx(1:Psi, Distributions{18}');hold on
semilogx(1:Psi, Distributions{20}');hold on
semilogx(1:Psi, Distributions{23}');hold on
semilogx(1:Psi, Distributions{30}');hold on
semilogx(1:Psi, Distributions{40}');hold on
semilogx(1:Psi, Distributions{50}');hold on
grid on

legend('$\eta = 18$',...
    '$\eta = 20$',...
    '$\eta = 23$',...
    '$\eta = 30$',...
    '$\eta = 40$',...
    '$\eta = 60$');

xlabel('List rank $L$', 'interpreter', 'latex');
ylabel('Probability', 'interpreter', 'latex');


% figure;
% semilogy(1:Psi, Tilted_distributions{18}');hold on
% semilogy(1:Psi, Tilted_distributions{20}');hold on
% semilogy(1:Psi, Tilted_distributions{23}');hold on
% semilogy(1:Psi, Tilted_distributions{30}');hold on
% semilogy(1:Psi, Tilted_distributions{40}');hold on
% semilogy(1:Psi, Tilted_distributions{50}');hold on
% grid on
% 
% legend('$\eta = 18$',...
%     '$\eta = 20$',...
%     '$\eta = 23$',...
%     '$\eta = 30$',...
%     '$\eta = 40$',...
%     '$\eta = 60$');
% 
% xlabel('List rank $L$', 'interpreter', 'latex');
% ylabel('Probability', 'interpreter', 'latex');

figure;
MaxObserveVal = 60;
plot(etas(1:MaxObserveVal), Cond_exp_list_ranks(1:MaxObserveVal), 'o');hold on
plot(etas(1:MaxObserveVal), Approximations(1:MaxObserveVal), '-.');hold on
plot(etas(1:MaxObserveVal), Lower_bounds(1:MaxObserveVal), '-.');hold on
grid on
legend('Simulated',....
    'Approximation',...
    'Lower bound Eq. (4)',...
    'Location','southeast');
xlabel('Normalized norm $\eta$', 'interpreter', 'latex');
xlabel('Conditional expected list rank', 'interpreter', 'latex');
title ('k=64, ZTCC (13, 17), degree-6 CRC (103)');



%% Case study 2: ZTCC (561. 753) and degree-10 CRC polynomial (2317)



path = './Simulation_results/';
fileName = '031521_111148_cond_exp_list_sizes_soft_ZTCC_561_753_CRC_2317_k_64';

load([path, fileName, '.mat'],'etas', 'DistTables');
% DistTable format: (s, 1): # simulations at L=s, (s, 2): # UE at L = s.


Cond_exp_list_sizes_correct = zeros(1, length(etas));
Cond_exp_list_sizes_UE = zeros(1, length(etas));
prior_probs_correct = zeros(1, length(etas));
prior_probs_UE = zeros(1, length(etas));

Psi = size(DistTables{1}, 1);
list_ranks = 1:Psi;

Renormalized_distributions = cell(length(etas), 1);

for iter = 1:length(etas)
    num_UE = sum(DistTables{iter}(1:Psi, 2));
    num_tot = sum(DistTables{iter}(1:Psi, 1));
    num_correct = num_tot - num_UE;
    prior_probs_correct(iter) = num_correct / num_tot;
    prior_probs_UE(iter) = num_UE / num_tot;
    if num_correct > 0
        distribution = DistTables{iter}(1:Psi, 1) - DistTables{iter}(1:Psi, 2);
        distribution = distribution/num_correct;
        Cond_exp_list_sizes_correct(iter) = sum(list_ranks*distribution);
    else
        Cond_exp_list_sizes_correct(iter) = Inf;
    end
    
    if num_UE > 0
        Renormalized_distributions{iter} = DistTables{iter}(1:Psi, 2);
        Renormalized_distributions{iter} = Renormalized_distributions{iter} / num_UE;
        Cond_exp_list_sizes_UE(iter) = sum(list_ranks*Renormalized_distributions{iter});
    else
        Cond_exp_list_sizes_UE(iter) = Inf;
    end
end


figure;
semilogy(etas, Cond_exp_list_sizes_UE, '-o'); hold on
semilogy(etas, Cond_exp_list_sizes_correct, '-+'); hold on


yline(2^0,'--k','LineWidth',1); hold on
yline(2^10,'--k','LineWidth',1); hold on

grid on

yticks([1, 2^1,2^2,2^3,2^4, 2^5,2^6,2^7,2^8,2^9, 2^10]);
yticklabels({'$1$','$2^1$','$2^2$','$2^3$','$2^4$','$2^5$','$2^6$','$2^7$','$2^8$','$2^9$','$2^{10}$'});

legend('$\mathrm{E}[L|W =\eta, \mathit{UE}]$',...
    '$\mathrm{E}[L|W =\eta, \mathit{cor}]$',...
    'Location','southeast');

xlabel('Normalized norm $\eta$', 'interpreter', 'latex');
ylabel('Conditional expected list rank', 'interpreter', 'latex');



figure;
plot(etas, prior_probs_UE, '-o'); hold on
plot(etas, prior_probs_correct, '-+'); hold on
grid on

legend('$P(\mathit{UE})$',...
    '$P(\mathit{cor})$');

xlabel('Normalized norm $\eta$', 'interpreter', 'latex');
ylabel('Probability', 'interpreter', 'latex');








